[{"D:\\collegeMentor\\collegementor\\client\\src\\index.js":"1","D:\\collegeMentor\\collegementor\\client\\src\\App.js":"2","D:\\collegeMentor\\collegementor\\client\\src\\components\\Login\\Login.js":"3","D:\\collegeMentor\\collegementor\\client\\src\\components\\Input.js":"4","D:\\collegeMentor\\collegementor\\client\\src\\components\\Button\\Button.js":"5","D:\\collegeMentor\\collegementor\\client\\src\\components\\Login\\Register.js":"6","D:\\collegeMentor\\collegementor\\client\\src\\components\\Header\\Header.js":"7","D:\\collegeMentor\\collegementor\\client\\src\\components\\SideNavigation\\SideNavigation.js":"8","D:\\collegeMentor\\collegementor\\client\\src\\components\\Feed\\Feed.js":"9","D:\\collegeMentor\\collegementor\\client\\src\\components\\Post\\Post.js":"10"},{"size":279,"mtime":1611930491615,"results":"11","hashOfConfig":"12"},{"size":1339,"mtime":1612854262712,"results":"13","hashOfConfig":"12"},{"size":3776,"mtime":1612854602786,"results":"14","hashOfConfig":"12"},{"size":222,"mtime":1612165638377,"results":"15","hashOfConfig":"12"},{"size":200,"mtime":1612165638375,"results":"16","hashOfConfig":"12"},{"size":4275,"mtime":1612854602787,"results":"17","hashOfConfig":"12"},{"size":4525,"mtime":1612854262714,"results":"18","hashOfConfig":"12"},{"size":1957,"mtime":1612506152436,"results":"19","hashOfConfig":"12"},{"size":2870,"mtime":1612854304416,"results":"20","hashOfConfig":"12"},{"size":5584,"mtime":1612854262715,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"14rvzv5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"D:\\collegeMentor\\collegementor\\client\\src\\index.js",[],["47","48"],"D:\\collegeMentor\\collegementor\\client\\src\\App.js",["49"],"D:\\collegeMentor\\collegementor\\client\\src\\components\\Login\\Login.js",["50","51","52","53"],"import React, { useState } from 'react'\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport Input from \"../Input\";\r\nimport \"./Login.css\";\r\nimport Button from \"../Button/Button\";\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  /*const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");*/\r\n  const [show, setShow] = useState(false);\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .required(\"This field is required\"),\r\n    password: Yup.string()\r\n      .required(\"This field is required\")\r\n  });\r\n\r\n\r\n  const formSubmit = async (values) => {\r\n    console.log(values.username, values.password);\r\n    try {\r\n      axios.request({\r\n        method: 'POST',\r\n        url: `http://localhost:8080/login`,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        data: {\r\n          username: `${values.username}`,\r\n          password: `${values.password}`\r\n        }\r\n      })\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"auth_details\">\r\n        <h1 style={{ fontFamily: \"'Open Sans', sans-serif\" }}>Welcome Back :)</h1>\r\n        <p >To keep connected with us please login with your perosinal informmation by email address and password <NotificationsIcon style={{ color: \"orange\" }} /> </p>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            username: '',\r\n            password: '',\r\n          }}\r\n          validationSchema={LoginSchema}\r\n          onSubmit={values => {\r\n            console.log(values);\r\n            formSubmit(values);\r\n          }}\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Form>\r\n              <div className=\"auth_field_username\">\r\n                <div className=\"email_icon\">\r\n                  <MailOutlineIcon fontSize=\"large\" />\r\n                </div>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <span style={{ color: \"grey\", fontSize: \"1.2rem\" }}>Username</span>\r\n                  <br />\r\n                  <Field name=\"username\" type=\"text\" />\r\n                  {errors.username && touched.username ? (\r\n                    <div>{errors.username}</div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"auth_field_password\">\r\n                <div className=\"password_icon\">\r\n                  <LockOutlinedIcon fontSize=\"large\" />\r\n                </div>\r\n                <div style={{ width: \"100%\" }}>\r\n                  <span style={{ color: \"grey\", fontSize: \"1.2rem\" }}>password</span>\r\n                  <br />\r\n                  <Field name=\"password\" type=\"password\" />\r\n                  {errors.password && touched.password ? (\r\n                    <div>{errors.password}</div>\r\n                  ) : null}\r\n                  {/* <Button onClick={() => { setShow(!show) }} value={\"view\"}></Button> */}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <Button type=\"submit\" value=\"Login\" className=\"login_button\" />\r\n              </div>\r\n              {/* <NavLink to=\"/home\">\r\n                \r\n              </NavLink> */}\r\n\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n\r\n        <div className=\"button\">\r\n\r\n          <div>\r\n            <Button value=\"Create Account\" className=\"create_account_button\" />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","D:\\collegeMentor\\collegementor\\client\\src\\components\\Input.js",[],"D:\\collegeMentor\\collegementor\\client\\src\\components\\Button\\Button.js",[],"D:\\collegeMentor\\collegementor\\client\\src\\components\\Login\\Register.js",["54"],"D:\\collegeMentor\\collegementor\\client\\src\\components\\Header\\Header.js",["55","56","57","58","59"],"import React, { createContext, useEffect, useState,useContext } from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Input from \"../Input\";\r\nimport \"./Header.css\"\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone';\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport BusinessCenterRoundedIcon from '@material-ui/icons/BusinessCenterRounded';\r\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\r\nimport ContactSupportRoundedIcon from '@material-ui/icons/ContactSupportRounded';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport MessageOutlinedIcon from '@material-ui/icons/MessageOutlined';\r\nimport NotificationsOutlinedIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport ArrowDropDownOutlinedIcon from '@material-ui/icons/ArrowDropDownOutlined';\r\nimport Post from '../Post/Post';\r\nimport {ModalState} from \"../Post/Post\"\r\n\r\n\r\nfunction Header() {\r\n  const [isModal,setIsModal] = useState(false);\r\n\r\n\r\n  function OpenModal(){\r\n      setIsModal(true); \r\n\r\n  }\r\n\r\n  function HandleChange(){\r\n    setIsModal(false)\r\n  }\r\n\r\n  \r\n    return (\r\n        <>\r\n        \r\n          <div className=\"header_main\">\r\n            <div className=\"header_left\">\r\n              <img src=\"https://tse2.mm.bing.net/th?id=OIP.ny9ywuY7zgVbs7blnCmBrAHaHS&pid=Api&P=0&w=160&h=159\"style={{width:\"80px\", height:\"60px\"}}></img>\r\n              <SearchTwoToneIcon className=\"seacrh_button\" />\r\n              <Input type=\"search\" placeholder=\"Seacrh...\" className=\"input_field\"></Input>\r\n            </div>\r\n            <div className=\"header_middle\">\r\n              <div className=\"header_icon\">\r\n                <NavLink to=\"/home\" exact activeClassName=\"home_active\" >\r\n                  <IconButton>\r\n                    <HomeRoundedIcon fontSize=\"large\"  />\r\n                  </IconButton>\r\n                </NavLink>\r\n              </div>\r\n              <div className=\"header_icon\">\r\n              <NavLink to=\"/login\" exact activeClassName=\"bussiness_active\" >\r\n                <IconButton >\r\n                  <BusinessCenterRoundedIcon fontSize=\"large\"  />\r\n                </IconButton>\r\n              </NavLink>\r\n                </div>\r\n                <div className=\"header_icon\">\r\n              <NavLink to=\"/home\" exact activeClassName=\"groups_active\" >\r\n                <IconButton >\r\n                  <PeopleAltRoundedIcon fontSize=\"large\"   />\r\n                  </IconButton>\r\n              </NavLink>\r\n                </div>\r\n                <div className=\"header_icon\">\r\n              <NavLink to=\"/home\" exact activeClassName=\"help_active\"  >\r\n                <IconButton >\r\n                  <ContactSupportRoundedIcon fontSize=\"large\"  />\r\n                  </IconButton>\r\n              </NavLink>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"header_right\">\r\n              <div className=\"header_profile\">\r\n                <IconButton>\r\n                  <Avatar src=\"https://tse1.mm.bing.net/th?id=OIP.6nCVjA0S936UiBlDUsov4QHaE9&pid=Api&P=0&w=245&h=165\" ></Avatar>\r\n                </IconButton>\r\n                <p style={{color:\"black\" , fontSize:\"24px\"}}>kheersagar</p>\r\n              </div>\r\n              <div  className=\"add\">\r\n              {/* <NavLink to=\"/create-post\" exact className=\"add_active\"> */}\r\n              <IconButton onClick={OpenModal} >\r\n                <AddOutlinedIcon className=\"header_right_icon\" style={{fontSize:\"40px\"}} />    \r\n                </IconButton>\r\n                \r\n                  <Post display={isModal? \"block\" : \"none\"} onChange = {HandleChange}/>\r\n                {/* </NavLink> */}\r\n              </div>\r\n              <div className=\"message\">\r\n              <IconButton >\r\n                <MessageOutlinedIcon  className=\"header_right_icon\" style={{fontSize:\"40px\"}}  />\r\n                </IconButton>\r\n              </div>\r\n              <div className=\"notification\">\r\n              <IconButton >\r\n                <NotificationsOutlinedIcon  className=\"header_right_icon\" style={{fontSize:\"40px\"}}  />\r\n                </IconButton>\r\n              </div>\r\n              <div className=\"down_arrow\">\r\n              <IconButton >\r\n                <ArrowDropDownOutlinedIcon  className=\"header_right_icon\" style={{fontSize:\"40px\"}}  />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          </div> \r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","D:\\collegeMentor\\collegementor\\client\\src\\components\\SideNavigation\\SideNavigation.js",["60"],"import React from 'react';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"./SideNavigation.css\";\r\nimport GroupRoundedIcon from '@material-ui/icons/GroupRounded';\r\nimport EventAvailableRoundedIcon from '@material-ui/icons/EventAvailableRounded';\r\nimport PeopleAltTwoToneIcon from '@material-ui/icons/PeopleAltTwoTone';\r\nimport FlagRoundedIcon from '@material-ui/icons/FlagRounded';\r\nimport { orange } from '@material-ui/core/colors';\r\n\r\nfunction SideNavigation() {\r\n    return (\r\n        <>\r\n          <div className=\"side_nav\">\r\n            <div className=\"user_profile\">\r\n              <div>\r\n                <Avatar />\r\n              </div>\r\n              <div className=\"side_nav_icon_name\">\r\n                kheersagar\r\n              </div>\r\n            </div>\r\n            <div className=\"friends\">\r\n              <div>\r\n                <GroupRoundedIcon fontSize=\"large\" color=\"primary\" />\r\n              </div>\r\n              <div className=\"side_nav_icon_name\">\r\n                Friends\r\n              </div>\r\n            </div>\r\n            <div className=\"events\">\r\n              <div>\r\n                <EventAvailableRoundedIcon fontSize=\"large\" color=\"secondary\"/>\r\n              </div>\r\n              <div className=\"side_nav_icon_name\">\r\n                Events\r\n              </div>\r\n            </div>\r\n            <div className=\"groups\">\r\n              <div>\r\n                <PeopleAltTwoToneIcon fontSize=\"large\" color=\"primary\" />\r\n              </div>\r\n              <div className=\"side_nav_icon_name\">\r\n                Groups\r\n              </div>\r\n            </div>\r\n            <div className=\"pages\">\r\n              <div>\r\n                <FlagRoundedIcon fontSize=\"large\" style={{color:\"orange\"}} />\r\n              </div>\r\n              <div className=\"side_nav_icon_name\">\r\n                Pages\r\n              </div>\r\n            </div>\r\n            </div>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SideNavigation;\r\n","D:\\collegeMentor\\collegementor\\client\\src\\components\\Feed\\Feed.js",["61","62"],"D:\\collegeMentor\\collegementor\\client\\src\\components\\Post\\Post.js",["63","64","65","66","67","68","69","70","71","72","73","74","75"],"import {React,useState,useEffect,createContext} from 'react'\r\nimport \"./Post.css\";\r\nimport Input from \"../Input\";\r\nimport Button from \"../Button/Button\"\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport axios from 'axios';\r\nimport { BrowserRouter, Redirect, Route,useHistory } from 'react-router-dom';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\n \r\n\r\nfunction Post(props) {\r\n  const [Title, setTitle] = useState('');\r\n  const [Description, setDescription] = useState('');\r\n  const [isModal,setIsModal] = useState(true);\r\n  const customStyle ={\r\n    backgroundColor: \"rgb(238, 232, 232)\"\r\n  }\r\n\r\n\r\n  function onTitleChangeHandler(e){\r\n    const Title = e.target.value;\r\n    console.log(Title);\r\n    setTitle(Title);\r\n  }\r\n\r\n  function onDescriptionChangeHandler(e){\r\n    const Description = e.target.value;\r\n    console.log(Description);\r\n    setDescription(Description);\r\n  }\r\n\r\n  async function submitHandler(event){\r\n    event.preventDefault();\r\n    setTitle('');\r\n    setDescription('');\r\n    try {\r\n      const x = await axios.request({\r\n        method: 'POST',\r\n        url: `http://localhost:8080/create-post`,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        data: {\r\n          Title: Title,\r\n          Description: Description\r\n        }\r\n        \r\n      })     \r\n      \r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n  }\r\n\r\n function modalStateHandler(){\r\n   setIsModal(false)\r\n   props.onChange();\r\n }\r\n\r\n if(Title != \"\" && Description!=\"\"){\r\n   customStyle.backgroundColor =\"rgb(14, 97, 221)\"\r\n }\r\n\r\n    return (\r\n      \r\n      <div className=\"create_post_modal\"  style={{display : props.display}}  >\r\n      <form onSubmit={submitHandler}  >\r\n        <div className=\"post_main\">\r\n        <div className=\"create_post_main\" >\r\n        <div className=\"create_post\">\r\n        Create Post\r\n        </div>\r\n            <div className=\"close_button\">\r\n              <IconButton onClick={modalStateHandler} >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </div>\r\n        </div>\r\n        <div className=\"modal_header\">\r\n            <div className=\"user_profile\">\r\n                <div className=\"user_profile_image\">\r\n                  <Avatar />\r\n                </div>\r\n                <div  className=\"user_profile_name\">\r\n                  <p>kheersagar</p>\r\n                </div>\r\n                \r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n            </div>\r\n            <div className=\"post_title_main\">\r\n                <Input type=\"text\" placeholder=\"Enter Title...\" className=\"post_title\" value={Title} onChange={onTitleChangeHandler} />\r\n            </div>\r\n            <div className=\"description\">\r\n                {/* <Input type=\"textarea\" placeholder=\"Enter something..\" value={Description} onChange={onDescriptionChangeHandler}/> */}\r\n                <textarea placeholder=\"Enter something..\" value={Description} onChange={onDescriptionChangeHandler}>\r\n                  hello\r\n                </textarea>\r\n            </div>\r\n            <div>\r\n                <Button type=\"submit\" value=\"Post\" className=\"post_button\"  style={customStyle}></Button>\r\n                \r\n            </div>\r\n        </div>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;\r\n\r\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":3,"column":34,"nodeType":"82","messageId":"83","endLine":3,"endColumn":42},{"ruleId":"80","severity":1,"message":"84","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":13},{"ruleId":"80","severity":1,"message":"85","line":11,"column":10,"nodeType":"82","messageId":"83","endLine":11,"endColumn":17},{"ruleId":"80","severity":1,"message":"86","line":17,"column":10,"nodeType":"82","messageId":"83","endLine":17,"endColumn":14},{"ruleId":"80","severity":1,"message":"87","line":17,"column":16,"nodeType":"82","messageId":"83","endLine":17,"endColumn":23},{"ruleId":"80","severity":1,"message":"84","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":13},{"ruleId":"80","severity":1,"message":"88","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":30},{"ruleId":"80","severity":1,"message":"89","line":1,"column":32,"nodeType":"82","messageId":"83","endLine":1,"endColumn":41},{"ruleId":"80","severity":1,"message":"90","line":1,"column":52,"nodeType":"82","messageId":"83","endLine":1,"endColumn":62},{"ruleId":"80","severity":1,"message":"91","line":17,"column":9,"nodeType":"82","messageId":"83","endLine":17,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":39,"column":15,"nodeType":"94","endLine":39,"endColumn":149},{"ruleId":"80","severity":1,"message":"95","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":16},{"ruleId":"80","severity":1,"message":"96","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":55,"column":27,"nodeType":"94","endLine":55,"endColumn":157},{"ruleId":"80","severity":1,"message":"88","line":1,"column":34,"nodeType":"82","messageId":"83","endLine":1,"endColumn":47},{"ruleId":"80","severity":1,"message":"96","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":14},{"ruleId":"80","severity":1,"message":"97","line":7,"column":10,"nodeType":"82","messageId":"83","endLine":7,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":7,"column":25,"nodeType":"82","messageId":"83","endLine":7,"endColumn":33},{"ruleId":"80","severity":1,"message":"98","line":7,"column":35,"nodeType":"82","messageId":"83","endLine":7,"endColumn":40},{"ruleId":"80","severity":1,"message":"99","line":7,"column":41,"nodeType":"82","messageId":"83","endLine":7,"endColumn":51},{"ruleId":"80","severity":1,"message":"100","line":18,"column":10,"nodeType":"82","messageId":"83","endLine":18,"endColumn":17},{"ruleId":"80","severity":1,"message":"101","line":21,"column":10,"nodeType":"82","messageId":"83","endLine":21,"endColumn":17},{"ruleId":"80","severity":1,"message":"102","line":51,"column":13,"nodeType":"82","messageId":"83","endLine":51,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":63,"column":11,"nodeType":"105","messageId":"106","endLine":63,"endColumn":13},{"ruleId":"103","severity":1,"message":"104","line":63,"column":31,"nodeType":"105","messageId":"106","endLine":63,"endColumn":33},{"ruleId":"103","severity":1,"message":"107","line":73,"column":54,"nodeType":"105","messageId":"106","endLine":73,"endColumn":56},{"ruleId":"92","severity":1,"message":"93","line":138,"column":19,"nodeType":"94","endLine":138,"endColumn":124},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'NavLink' is defined but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'createContext' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'ModalState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'orange' is defined but never used.","'Button' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'useHistory' is defined but never used.","'isValid' is assigned a value but never used.","'isModal' is assigned a value but never used.","'x' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]